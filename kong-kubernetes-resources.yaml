# DEPLOYMENT and CONTAINER
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: kong
  name: kong
  namespace: king
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kong
  template:
    metadata:
      labels:
        name: kong
      namespace: king
    spec:
      containers:
        - name: kong
          image: ybel/kong-test:3
          # image: docker.pkg.github.com/navikt/kong/kong:2020.04.03-998b913
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 8001
              scheme: HTTP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8001
              scheme: HTTP
          #livenessProbe:
          #  exec:
          #    command:
          #      - kong
          #      - health
          #  failureThreshold: 15
          #  periodSeconds: 5
          #  timeoutSeconds: 2
          ports:
            - containerPort: 8000
            - containerPort: 8001
            - containerPort: 8443
            - containerPort: 8444
          env:
            - name: KONG_ADMIN_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_LISTEN
              value: 0.0.0.0:8001, 0.0.0.0:8444 ssl
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_DECLARATIVE_CONFIG
              value: kong.yaml
            - name: KONG_PROXY_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PROXY_ERROR_LOG
              value: /dev/stderr
            - name: KONG_MEM_CACHE_SIZE
              value: "512m"
            - name: KONG_PLUGINS
              value: bundled,correlation-id,syslog,jwt,rate-limiting
            - name: KONG_NGINX_PROXY_INCLUDE
             # valueFrom:
             #   configMapKeyRef:
             #     name: kong-proxy
             #     key: proxy_health_check.conf
              value: /usr/local/kong/kube/proxy_health_check.conf
          volumeMounts:
            - name: kong-proxy
              mountPath: /usr/local/kong/kube
      volumes:
        - name: kong-proxy
          configMap:
            name: kong-proxy
            items:
              - key: proxy_health_check.conf
                path: proxy_health_check.conf
      restartPolicy: Always
---
# KONG-SERVICE
apiVersion: v1
kind: Service
metadata:
  labels:
    name: kong
  name: kong-service
spec:
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
    - name: "8001"
      port: 8001
      targetPort: 8001
    - name: "8443"
      port: 8443
      targetPort: 8443
    - name: "8444"
      port: 8444
      targetPort: 8444
  selector:
    name: kong
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: konga
  name: konga
  namespace: king
spec:
  replicas: 1
  selector:
    matchLabels:
      name: konga
  template:
    metadata:
      labels:
        name: konga
      namespace: king
    spec:
      containers:
        - name: konga
          image: pantsel/konga:latest
          livenessProbe:
            exec:
              command:
                - curl
                - f
                - localhost
            failureThreshold: 15
            periodSeconds: 5
            timeoutSeconds: 2
          ports:
            - containerPort: 1337
          env:
            - name: NODE_ENV
              value: development
            # - name: DB_HOST
            #   value: kong-database
      restartPolicy: Always
---
# GUI - KONGA - SERVICE
apiVersion: v1
kind: Service
metadata:
  labels:
    name: konga
  name: konga-service
spec:
  ports:
    - name: "1337"
      port: 1337
      targetPort: 1337
  selector:
    name: konga
  type: NodePort
---
apiVersion: v1
kind: Namespace
metadata:
  name: king
---
# INGRESS
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kong-ingress
  annotations:
    rewrite-target: /$1
spec:
  rules:
    - host: kong.nais.local
      http:
        paths:
          - path: /
            backend:
              serviceName: kong-service
              servicePort: 8001

# Deploy config
# minikube kubectl apply -- -f <path-to-file>

# Clean up
# minikube kubectl delete deploy/kong
# minikube kubectl delete svc/konga-service

# Manuelt create namespace
# minikube kubectl create namespace <insert-namespace-name-here>

# Default namespace
# minikube kubectl config set-context -- --current --namespace=king

# Port-forward
# minikube kubectl expose deployment kong -- --target-port=8001 --type=NodePort
# minikube kubectl port-forward svc/kong 8000

# minikube kubectl create configmap kong-proxy -- --from-file=proxy_health_check.conf=/Users/m151886/IdeaProjects/kong/kong-health-check.yaml
# minikube kubectl create configmap kong-proxy -- --from-env-file=/Users/m151886/IdeaProjects/kong/kong-health-check.yaml
